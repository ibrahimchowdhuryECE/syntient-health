name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-orchestrator:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Run tests
        run: |
          cd services/orchestrator
          ./gradlew test
          
      - name: Build JAR
        run: |
          cd services/orchestrator
          ./gradlew build -x test

  test-python-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [dm, mam, cmm, retrieval]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.service }}-${{ hashFiles('services/' + matrix.service + '/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.service }}-
            
      - name: Install dependencies
        run: |
          cd services/${{ matrix.service }}
          pip install -r requirements.txt
          pip install pytest
          
      - name: Run tests
        run: |
          cd services/${{ matrix.service }}
          python -m pytest tests/ -v

  build-docker:
    runs-on: ubuntu-latest
    needs: [test-orchestrator, test-python-services]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Orchestrator image
        run: |
          docker build -t chatbot-orchestrator:latest services/orchestrator/
          
      - name: Build Python service images
        run: |
          docker build -t chatbot-dm:latest services/dm/
          docker build -t chatbot-mam:latest services/mam/
          docker build -t chatbot-cmm:latest services/cmm/
          docker build -t chatbot-retrieval:latest services/retrieval/

  validate-openapi:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install OpenAPI validator
        run: |
          pip install openapi-spec-validator
          
      - name: Validate OpenAPI specs
        run: |
          for spec in contracts/openapi/*.yaml; do
            echo "Validating $spec..."
            openapi-spec-validator "$spec"
          done

  # Placeholder for linting - uncomment when ready
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     
  #     - name: Set up Python 3.11
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.11'
  #         
  #     - name: Install linting tools
  #       run: |
  #         pip install flake8 black isort
  #         
  #     - name: Lint Python code
  #       run: |
  #         for service in dm mam cmm retrieval; do
  #           echo "Linting $service..."
  #           cd services/$service
  #           flake8 app/ tests/
  #           black --check app/ tests/
  #           isort --check-only app/ tests/
  #         done
  #         
  #     - name: Set up JDK 21
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: '21'
  #         distribution: 'temurin'
  #         
  #     - name: Lint Java code
  #       run: |
  #         cd services/orchestrator
  #         ./gradlew spotbugsMain
